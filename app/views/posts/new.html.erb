<div class="container mx-auto p-4">
  <div class="max-w-lg mx-auto">
      <h3 class="text-2xl font-bold text-center mb-6">一週間の献立表</h3>
      <%= form_with model: @post_form, url: posts_path, class: "new_post" do |f| %>

      <!--一週間のメニュー-->
    <%= f.label :monday, "月曜日", class: "block text-lg font-medium mb-2" %>
    <%= f.text_area :monday, class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" %>

    <%= f.label :tuesday, "火曜日", class: "block text-lg font-medium mb-2" %>
    <%= f.text_area :tuesday,class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" %>

    <%= f.label :wednesday, "水曜日", class: "block text-lg font-medium mb-2" %>
    <%= f.text_area :wednesday, class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" %>

    <%= f.label :thursday, "木曜日", class: "block text-lg font-medium mb-2" %>
    <%= f.text_area :thursday, class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" %>

    <%= f.label :friday, "金曜日", class: "block text-lg font-medium mb-2" %>
    <%= f.text_area :friday, class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" %>

    <%= f.label :saturday, "土曜日", class: "block text-lg font-medium mb-2" %>
    <%= f.text_area :saturday, class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" %>

    <%= f.label :sunday, "日曜日", class: "block text-lg font-medium mb-2" %>
    <%= f.text_area :sunday,class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" %>

      <!--買い物リスト入力画面-->

<h3>買い物リスト</h3>
  <%= f.label :meat_fish, "肉・魚" %>
  <%= f.text_field :meat_fish %>
  <%= button_tag "肉・魚を追加", type: :submit, name: 'add_meat_fish', value: f.object.meat_fish, formaction: add_item_posts_path %>

  <%= f.label :vegetable, "野菜" %>
  <%= f.text_field :vegetable %>
  <%= button_tag "野菜を追加", type: :submit, name: 'add_vegetable', value: f.object.vegetable, formaction: add_item_posts_path %>

  <%= f.label :other, "その他" %>
  <%= f.text_field :other %>
  <%= button_tag "その他を追加", type: :submit, name: 'add_other', value: f.object.other, formaction: add_item_posts_path %>

  <!--ショッピングリスト-->
  <div id="shopping_list">
    <%= render partial: 'shopping_list', locals: { post_form: @post_form } %>
  </div>
<!-- Turbo Streamからの更新を受ける -->
  <%= turbo_stream_from 'shopping_list' %>

      <!--ポスト-->
      <div class="mb-4">
        <%= f.label :memo, "メモ", class: "block text-lg font-medium mb-2" %>
        <%= f.text_field :memo, class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder: "メモを入力" %>
      </div>
      <div class="mb-4">
        <%= f.label :sum, "合計", class: "block text-lg font-medium mb-2" %>
        <%= f.number_field :sum, class: "w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder: "数字を入力" %>
      </div>
    <div class="mb-4">
      <%= f.submit "投稿", class: "w-full p-3 bg-blue-500 text-white font-semibold rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500" %>
      <% end %>
    </div>
  </div>
</div>
<!--
<script>
document.addEventListener('DOMContentLoaded', () => {
  // 追加ボタンをクリックしたときの処理
  const addItemButtons = document.querySelectorAll('.add-item-btn');

  addItemButtons.forEach(button => {
    button.addEventListener('click', (e) => {
      const button = e.target;
      const containerId = button.parentElement.id; // meat_fish-fields, vegetable-fields, other-fields
      const itemType = containerId.split('-')[0]; // 'meat_fish', 'vegetable', 'other'
      const inputField = button.previousElementSibling; // テキストエリア

      // 入力フィールドが空でないかをチェック
      if (inputField.value.trim() !== '') {
        // 新しいアイテムを追加するためのdivを作成
        const itemContainer = document.createElement('div');
        itemContainer.classList.add('item', 'border-b', 'border-gray-300', 'py-1');

        // 新しいアイテムの内容
        itemContainer.innerHTML = `
          <span class="item-text">${inputField.value}</span>
          <button type="button" class="remove-item-btn text-red-500 ml-2">削除</button>
        `;

        // アイテムを表示する場所に追加
        document.getElementById(`${itemType}-items`).appendChild(itemContainer);

        // 入力フィールドをクリア
        inputField.value = '';

        // 削除ボタンのイベントリスナーを追加
        const removeButton = itemContainer.querySelector('.remove-item-btn');
        removeButton.addEventListener('click', () => {
          itemContainer.remove();
        });
      } else {
        // 空欄の場合は何もしない
        alert('入力欄が空です。');
      }
    });
  });
});
</script>
-->